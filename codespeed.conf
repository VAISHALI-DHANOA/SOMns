# Config file for ReBench
# Config format is YAML (see http://yaml.org/ for detailed spec)

# this run definition will be choosen if no parameters are given to rebench.py
standard_run: all
standard_data_file: 'codespeed.data'
standard_experiment: fj

reporting:
    csv_file: latest-runs.csv
    csv_locale: de_DE.UTF-8

runs:
    number_of_data_points: 1

statistics:
    confidence_level: 0.95

# settings for quick runs, useful for fast feedback during experiments
quick_runs:
    number_of_data_points: 3
    max_time: 60   # time in seconds

# definition of benchmark suites
benchmark_suites:
    forkjoin:
        gauge_adapter: RebenchLog
        command: " core-lib/Benchmarks/Harness.som %(benchmark)s "
        max_runtime: 600
        benchmarks:          
            - Sort.QuickSort:
                extra_args: "500 0 1"
            - JacobiTest_Spawn.Jacobi:
                extra_args: "500 0 1"
            - KomposTest.Kompos:
                extra_args: "500 0 1"
            - PolyIntegrate.Integrate:
                extra_args: "500 0 1"
            - ForkJoin.Fib:
                extra_args: "500 0 1"
            #- NQueensTest_Spawn.Queens:
            #    extra_args: "500 0 1"
   

# VMs have a name and are specified by a path and the binary to be executed
virtual_machines:
    SOMns-interp:
        path: .
        binary: som
        args: "-G -t1 "

    SOMns-graal-original:
        path: .
        binary: som
        args: "-Dsom.fj=org "
    SOMns-graal-sequential:
        path: .
        binary: som
        args: "-Dsom.fj=seq "
    SOMns-graal-opt-with-backoff:
        path: .
        binary: som
        args: "-Dsom.fj=backoff"
    SOMns-graal-opt-without-backoff:
        path: .
        binary: som
        args: ""
	SOMns-graal-opt-with-backoff-seqcutoff:
        path: .
        binary: som
        args: "-Dsom.fj=backoff -Dsom.seqCut=100"
    SOMns-graal-opt-without-backoff-seqcutoff:
        path: .
        binary: som
        args: "-Dsom.seqCut=100"

# define the benchmarks to be executed for a re-executable benchmark run
experiments:
    fj:
        description: Run fork/join benchmarks
        actions: benchmark
        benchmark:
            - forkjoin
        executions:
            # - SOMns-graal-original
            - SOMns-graal-sequential
            - SOMns-graal-opt-with-backoff            
            - SOMns-graal-opt-without-backoff
			- SOMns-graal-opt-with-backoff-seqcutoff
			- SOMns-graal-opt-without-backoff-seqcutoff
            